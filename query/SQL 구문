-----------CREAT, DROP 구문----------------

CREAT 구문 - 데이터베이스 생성
CREATE DATEBASE [DB_NAME];
ex)create database test_db;

CREATE 구문 - 테이블 생성
CREATE TABLE [NAME] ([COLUMN_NAME] [DATA_TYPE]);
ex)create table test_tb (name char(20), age int);

DROP 구문 - 데이터베이스/테이블 삭제
DROP [DATABASE/TABLE] [NAME];
DROP TABLE test_tb;

실습)
>create database example; //db 생성
>use example;
>select database();

>create table member(seq int, name char(20), email char(50)); //member table 생성
>show tables;
>describe(=desc) member; // 테이블 구조 조회

-----------INSERT, SELECT, UPDATE, DELETE 구문----------------
INSERT 구문 - 데이터 삽입
INSERT INTO [TABLE_NAME]([COLUMN1]...)VALUES ([DATA1]...);
ex)INSERT INTO test_tb(name, age) VALUES ('kimhongsam', 55);

SELECT 구문 - 데이터 조회
SELECT [COLUMN1] FROM [TABLE] WHERE [CONDITION];
ex)SELECT name, age FROM test_tb;

UPDATE 구문 - 데이터 수정
UPDATE [TABLE] SET [COLUMN1]=[DATA1] WHERE [CONDITION];
UPDATE test_tb SET age=35 WHERE name='kimhongsam';

DELETE 구문 - 데이터삭제
DELETE FROM [TABLE] WHERE [CONDITION];
DELETE FROM test_tb WHERE name='kimhongsam';




*연산자

LIKE 연산자
와일드카드: %
의미 : 모든 문자
예시 : id like 'ad%'

와일드카드 : _
의미 : 하나의 문자
예시 : id like 'admi_'


CONCAT(문자열1, 문자열2...) 함수 사용 가능

IN 연산자
[컬럼/값] IN (값1, 값2...)
Select name, email FROM member WHERE id in('admin','guest')

NOT IN 연산자 사용
[컬럼/값] NOT IN(값1, 값2...)
SELECT name, email FROM member WHERE id not in('admin','guest')
