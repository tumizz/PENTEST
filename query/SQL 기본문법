-----------CREAT, DROP 구문----------------

CREAT 구문 - 데이터베이스 생성
CREATE DATEBASE [DB_NAME];
ex)create database test_db;

CREATE 구문 - 테이블 생성
CREATE TABLE [NAME] ([COLUMN_NAME] [DATA_TYPE]);
ex)create table test_tb (name char(20), age int);

DROP 구문 - 데이터베이스/테이블 삭제
DROP [DATABASE/TABLE] [NAME];
DROP TABLE test_tb;

실습)
>create database example; //db 생성
>use example;
>select database();

>create table member(seq int, name char(20), email char(50)); //member table 생성
>show tables;
>describe(=desc) member; // 테이블 구조 조회

-----------INSERT, SELECT, UPDATE, DELETE 구문----------------
INSERT 구문 - 데이터 삽입
INSERT INTO [TABLE_NAME]([COLUMN1]...)VALUES ([DATA1]...);
ex)INSERT INTO test_tb(name, age) VALUES ('kimhongsam', 55);

SELECT 구문 - 데이터 조회
SELECT [COLUMN1] FROM [TABLE] WHERE [CONDITION];
ex)SELECT name, age FROM test_tb;

UPDATE 구문 - 데이터 수정
UPDATE [TABLE] SET [COLUMN1]=[DATA1] WHERE [CONDITION];
UPDATE test_tb SET age=35 WHERE name='kimhongsam';

DELETE 구문 - 데이터삭제
DELETE FROM [TABLE] WHERE [CONDITION];
DELETE FROM test_tb WHERE name='kimhongsam';

실습)
>show tables;
>desc member;
>insert into member(seq, name, email) valuse(1, 'administrator', 'administrator@crehacktive.co.kr'); //컬럼 삽입
>select * from member;
>select name, email from member;
>insert into member values(6, "test", "test@crehacktive.co.kr");
>update member set name='test1' where seq=6;
>delete from member where seq=6;


--------------------------------연산자-----------------------------------------
SQL 연산자 : 산술 연산자, 비교 연산자, 논리 연산자, 비트 논리 연산자, 연결 연산자, IN 연산자, LIKE 연산자

 - 산술 연산자
>select 1+4*2;
>select * from member where seq=5-1;

 - 비교 연산자 : >, >=, <, <=, =, <> !=(같지 않다)
>select * from member where seq <3;
>select * from member where seq !=3;

 - 논리 연산자 
 1순위 NOT(부정) - NOT 피연산자
 2순위 AND(그리고(논리곱) - 피연산자1 AND 피연산자2
 3순위 OR(또는(논리합) - 피연산자1 OR 피연산자2
> select * from member where seq=1 or seq=5;
> select * from member where seq=5 and name='leegugu';

 - 비트 논리 연산자
         AND                          OR                   XOR  
ORACLE   bitand(피연산자1, 피연산자2)
MSSQL    피연산자1 & 피연산자2        피연산자1 | 피연산자2 피연산자^피연산자2
MYSQL    피연산자1 & 피연산자2        피연산자1 | 피연산자2 피연산자^피연산자2

>select 5&3;

 - 연결 연산자
DBMS     연산자        표현식                   예시  
ORACLE   ||            피연산자1||피연산자2     'te'||'st'      
MSSQL    +             피연산자1+피연산자2      'te'+'st'
MYSQL    공백          피연산자1 공백 피연산자2  'te'공백'st'

@ 공통적으로 CONCAT(문자열1, 문자열2...) 함수 사용이 가능하다.
>select 'te' 'st'
>select concat('cre','hack','tive');

 - IN 연산자
[컬럼/값] IN (값1, 값2...)
ex) >Select name, email FROM member WHERE id in('admin','guest')

>select * from member where seq in(1,2);
>select * from member where name in('administrator', 'guest');
 (=select * from member where name='administrator' or name='guest';)
 
 
 - NOT IN 연산자 사용
[컬럼/값] NOT IN(값1, 값2...)
ex) >SELECT name, email FROM member WHERE id not in('admin','guest')

>select * from member where name not in('administrator', 'guest');


 - LIKE 연산자
와일드카드: %
의미 : 모든 문자
예시 : id like 'ad%'

와일드카드 : _
의미 : 하나의 문자
예시 : id like 'admi_'

> select * from member where name like 'admin%';
> select * from member where name like 'gu_st';
> select * from member where email like '%@crehacktive.co.kr';

--------------------------------함수-----------------------------------------

 - 문자열 함수
DBMS          함수                   사용법
ORACLE        SUBSTR, SUBSTRB        함수(문자열, 시작위치, 길이)
MSSQL         SUBSTRING              함수(문자열, 시작위치, 길이)
MYSQL         SUBSTRING, SUBSTR, MID 함수(문자열, 시작위치, 길이)

>select substring('test',3,1);
>select substr('test',2,2);
>select mid('test',4,1);

 - 문자, 아스키코드 변환 함수
 DBMS         CHAR->ASCII          ASCII->CHAR
ORACLE        ASCII                CHR
MSSQL         ASCII                CHAR
MYSQL         ASCII,ORD            CHAR

CHAR->ASCII (문자 -> 아스키코드 변환)
> select ascii('a');
>select bin(ascii('a')); //2진수값 보기
> select ascii(substring('test',1,1));
> select ascii(substring('test',2,1));

아스키코드 -> 문자로 변환
>select char(97);
>select concat(char(97),char(97)); //싱글쿼터를 사용하지 않고 문자를 붙이는 방법

>select ascii('a');
>select ascii('d');
>select ascii('m');
>select ascii('i');
>select ascii('n');
>select concat(char(97),char(100),char(109),char(105),char(110)); //admin단어를 싱글쿼터없이 표현함


 - COUNT 함수
>SELECT COUNT(COLUMN) FROM [TABLE];

> select count(*) from member;
+----------+
| count(*) |
+----------+
|        5 |
+----------+

 - 길이 함수
+------+---------------+
| DBMS | 함수          |
+------+---------------+
|ORACLE| LENGTH        |
|MSSQL | LEN           |
|MYSQL | LENGTH        |
+------+---------------+

> select length('test');
+----------------+
| length('test') |
+----------------+
|              4 |
+----------------+

> select name, length(email) from member;
+---------------+---------------+
| name          | length(email) |
+---------------+---------------+
| administrator |            31 |
| crehacktive   |            29 |
| guest         |            23 |
| kimhongsam    |            28 |
| leegugu       |            25 |
+---------------+---------------+


--------------------------------조건문-----------------------------------------
 - 조건문
+------+-----------------------------+
| DBMS | 구분                        |
+------+-----------------------------+
|ORACLE| DECODE 함수, CASE WHEN 구문 |
|MSSQL | CASE WHEN 구문              |
|MYSQL | IF 함수, CASE WHEN 구문     |
+------+-----------------------------+

 - CASE WHEN 구문 사용법
CASE WHEN [CONDITION] THEN [TRUE] ELSE [FALSE] END //CONDITION(조건문)임

> select case when 1=1 then 1 else 2 end;
+---------------------------------+
| case when 1=1 then 1 else 2 end |
+---------------------------------+
|                               1 |
+---------------------------------+

> select case when 1=1 then 'test1' else 'test2' end;//참
+---------------------------------------------+
| case when 1=1 then 'test1' else 'test2' end |
+---------------------------------------------+
| test1                                       |
+---------------------------------------------+


> select case when 1=2 then 'test1' else 'test2' end; //거짓
+---------------------------------------------+
| case when 1=2 then 'test1' else 'test2' end |
+---------------------------------------------+
| test2                                       |
+---------------------------------------------+


> select * from member where seq=(case when 1=1 then 1 else 2 end); //select 뿐만아니라 where이나 비교문에서도 사용가능, 해당조건문을 많이사용
+------+---------------+---------------------------------+
| seq  | name          | email                           |
+------+---------------+---------------------------------+
|    1 | administrator | administrator@crehacktive.co.kr |
+------+---------------+---------------------------------+

> select * from member where seq=(case when 1=2 then 1 else 2 end);
+------+-------------+-------------------------------+
| seq  | name        | email                         |
+------+-------------+-------------------------------+
|    2 | crehacktive | crehacktive@crehacktive.co.kr |
+------+-------------+-------------------------------+


--------------------------------서브쿼리-----------------------------------------
 - 서브쿼리개념
SELECT COLUMN1, COLUMN2 FROM TABLE WHERE [COLUMN]=(SELECT COLUMN FROM TABLE WHERE COLUMN=[VALUE])

select, from, where 절에 따른 서브쿼리 명칭
select (subquery) from (subQuery) a WHERE [COLUMN]=(SubQuery) //스칼라 서브쿼리, 인라인 뷰, 일반 서브쿼리

 - 단일 행 서브쿼리
SELECT name, email FROM member WHERE id=(SELECT id FROM bbs where idx=192) //단일행 반환

 - 다중 행 서브쿼리
SELECT name, email FROM member WHERE id in(SELECT id FROM bbs) // 다중행 반환

>select name, (select version()) from member; // 스칼라 서브쿼리 

>select name, (select email from member where seq=a.seq) from member a;

>select * from (select * from member)a;

>select * from (select * from member)a where a.seq=1;

>select * from member where seq=(select 1);
+------+---------------+---------------------------------+
| seq  | name          | email                           |
+------+---------------+---------------------------------+
|    1 | administrator | administrator@crehacktive.co.kr |
+------+---------------+---------------------------------+

> select * from member where seq=(select seq from member where name='guest'); //단일 행
+------+-------+-------------------------+
| seq  | name  | email                   |
+------+-------+-------------------------+
|    3 | guest | guest@crehacktive.co.kr |
+------+-------+-------------------------+

> select * from member where seq in(select seq from member); //
+------+---------------+---------------------------------+
| seq  | name          | email                           |
+------+---------------+---------------------------------+
|    1 | administrator | administrator@crehacktive.co.kr |
|    2 | crehacktive   | crehacktive@crehacktive.co.kr   |
|    3 | guest         | guest@crehacktive.co.kr         |
|    4 | kimhongsam    | kimhongsam@crehacktive.co.kr    |
|    5 | leegugu       | leegugu@crehacktive.co.kr       |
+------+---------------+---------------------------------+


--------------------------------ORDER BY----------------------------------
ORDER BY 절 사용법
SELECT COLUMN1, COLUMN2 FROM TABLE ORDER BY COLUMN [ASC/DESC] //

>select * from member order by seq desc;

> insert into member values(2, 'admin', 'admin@crehacktive.co.kr');

> select * from member order by seq;
+------+---------------+---------------------------------+
| seq  | name          | email                           |
+------+---------------+---------------------------------+
|    1 | administrator | administrator@crehacktive.co.kr |
|    2 | crehacktive   | crehacktive@crehacktive.co.kr   |
|    2 | admin         | admin@crehacktive.co.kr         |
|    3 | guest         | guest@crehacktive.co.kr         |
|    4 | kimhongsam    | kimhongsam@crehacktive.co.kr    |
|    5 | leegugu       | leegugu@crehacktive.co.kr       |
+------+---------------+---------------------------------+

> select * from member order by seq, name;
+------+---------------+---------------------------------+
| seq  | name          | email                           |
+------+---------------+---------------------------------+
|    1 | administrator | administrator@crehacktive.co.kr |
|    2 | admin         | admin@crehacktive.co.kr         |
|    2 | crehacktive   | crehacktive@crehacktive.co.kr   |
|    3 | guest         | guest@crehacktive.co.kr         |
|    4 | kimhongsam    | kimhongsam@crehacktive.co.kr    |
|    5 | leegugu       | leegugu@crehacktive.co.kr       |
+------+---------------+---------------------------------+

> select * from member order by 1; //1은 첫번째 컬럼(seq)을 기준으로 정렬함
+------+---------------+---------------------------------+
| seq  | name          | email                           |
+------+---------------+---------------------------------+
|    1 | administrator | administrator@crehacktive.co.kr |
|    2 | crehacktive   | crehacktive@crehacktive.co.kr   |
|    2 | admin         | admin@crehacktive.co.kr         |
|    3 | guest         | guest@crehacktive.co.kr         |
|    4 | kimhongsam    | kimhongsam@crehacktive.co.kr    |
|    5 | leegugu       | leegugu@crehacktive.co.kr       |
+------+---------------+---------------------------------+


> select * from member order by 2; //2는 두번째 컬럼(name)을 기준으로 정렬함
+------+---------------+---------------------------------+
| seq  | name          | email                           |
+------+---------------+---------------------------------+
|    2 | admin         | admin@crehacktive.co.kr         |
|    1 | administrator | administrator@crehacktive.co.kr |
|    2 | crehacktive   | crehacktive@crehacktive.co.kr   |
|    3 | guest         | guest@crehacktive.co.kr         |
|    4 | kimhongsam    | kimhongsam@crehacktive.co.kr    |
|    5 | leegugu       | leegugu@crehacktive.co.kr       |
+------+---------------+---------------------------------+


> select * from member order by 3; //3은 세번째 컬럼(email)을 기준으로 정렬함
+------+---------------+---------------------------------+
| seq  | name          | email                           |
+------+---------------+---------------------------------+
|    2 | admin         | admin@crehacktive.co.kr         |
|    1 | administrator | administrator@crehacktive.co.kr |
|    2 | crehacktive   | crehacktive@crehacktive.co.kr   |
|    3 | guest         | guest@crehacktive.co.kr         |
|    4 | kimhongsam    | kimhongsam@crehacktive.co.kr    |
|    5 | leegugu       | leegugu@crehacktive.co.kr       |
+------+---------------+---------------------------------+


> select seq, name from member order by 2; // member 테이블에서 2개 컬럼(seq, name) 조회하는데 2번째 컬럼을 기준으로 출력함
+------+---------------+
| seq  | name          |
+------+---------------+
|    2 | admin         |
|    1 | administrator |
|    2 | crehacktive   |
|    3 | guest         |
|    4 | kimhongsam    |
|    5 | leegugu       |
+------+---------------+

--------------------------------레코드 출력개수 제한----------------------------------

+------+---------------+
| DBMS  | 키워드       |
+------+---------------+
|ORACLE| ROWNUM        |
|MSSQL | TOP           |
|MYSQL | LIMIT         |
+------+---------------+

SELECT COLUMN1, COLUMN2 FROM TABLE LIMIT [OFFSET], [ROW_COUNT]

SELECT COLUMN1, COLUMN2 FROM TABLE LIMIT [ROW_COUNT]

> select * from member limit 4,1; //0부터 시작, 1개출력
+------+---------+---------------------------+
| seq  | name    | email                     |
+------+---------+---------------------------+
|    5 | leegugu | leegugu@crehacktive.co.kr |
+------+---------+---------------------------+

> select * from member limit 2,3;
+------+------------+------------------------------+
| seq  | name       | email                        |
+------+------------+------------------------------+
|    3 | guest      | guest@crehacktive.co.kr      |
|    4 | kimhongsam | kimhongsam@crehacktive.co.kr |
|    5 | leegugu    | leegugu@crehacktive.co.kr    |
+------+------------+------------------------------+

